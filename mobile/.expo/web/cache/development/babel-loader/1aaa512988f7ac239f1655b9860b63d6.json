{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projetos\\\\nlw\\\\mobile\\\\src\\\\pages\\\\Points\\\\index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Constants from 'expo-constants';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { SvgUri } from 'react-native-svg';\nimport * as Location from 'expo-location';\nimport api from \"../../services/api\";\n\nvar Points = function Points() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedItems = _useState4[0],\n      setSelectedItems = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      points = _useState6[0],\n      setPoints = _useState6[1];\n\n  var _useState7 = useState([0, 0]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      initialPosition = _useState8[0],\n      setInitialPosition = _useState8[1];\n\n  var navigation = useNavigation();\n  var route = useRoute();\n  var routeParams = route.params;\n  useEffect(function () {\n    function loadPosition() {\n      var _await$Location$reque, status, location, _location$coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert('Ooops...', 'Precisamos de sua permissão para obter a localização.');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 9:\n              location = _context.sent;\n              _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n              setInitialPosition([latitude, longitude]);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadPosition();\n  }, []);\n  useEffect(function () {\n    api.get('items').then(function (response) {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(function () {\n    api.get('points', {\n      params: {\n        city: routeParams.city,\n        uf: routeParams.uf,\n        items: selectedItems\n      }\n    }).then(function (response) {\n      setPoints(response.data);\n    });\n  }, [selectedItems]);\n\n  function handleNavigateBack() {\n    navigation.goBack();\n  }\n\n  function handleNavegateToDetail(id) {\n    navigation.navigate('Detail', {\n      point_id: id\n    });\n  }\n\n  function handleSelectItem(id) {\n    var alreadySelected = selectedItems.findIndex(function (item) {\n      return item === id;\n    });\n\n    if (alreadySelected >= 0) {\n      var filteredItems = selectedItems.filter(function (item) {\n        return item !== id;\n      });\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([].concat(_toConsumableArray(selectedItems), [id]));\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleNavigateBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 20,\n    color: \"#0C4383\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Bem Vindo.\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Encontre no mapa um ponto de coleta.\"), React.createElement(View, {\n    style: styles.mapContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, initialPosition[0] !== 0 && React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: initialPosition[0],\n      longitude: initialPosition[1],\n      latitudeDelta: 0.017,\n      longitudeDelta: 0.017\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, points.map(function (point) {\n    return React.createElement(Marker, {\n      key: String(point.id),\n      onPress: function onPress() {\n        return handleNavegateToDetail(point.id);\n      },\n      style: styles.mapMarker,\n      coordinate: {\n        latitude: point.latitude,\n        longitude: point.longitude\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.mapMarkerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: styles.mapMarkerImage,\n      source: {\n        uri: point.image_url\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.mapMarkerTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, point.name)));\n  })))), React.createElement(View, {\n    style: styles.itemsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    contentContainerStyle: {\n      paddingHorizontal: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, items.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      activeOpacity: 0.6,\n      key: String(item.id),\n      style: [styles.item, selectedItems.includes(item.id) ? styles.selectedItem : {}],\n      onPress: function onPress() {\n        return handleSelectItem(item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, React.createElement(SvgUri, {\n      width: 42,\n      height: 42,\n      uri: item.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: styles.itemTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, item.title));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    paddingTop: 20 + Constants.statusBarHeight\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: 'Ubuntu_700Bold',\n    marginTop: 24,\n    color: '#E92A77'\n  },\n  description: {\n    color: '#6C6C80',\n    fontSize: 16,\n    marginTop: 4,\n    fontFamily: 'Roboto_400Regular'\n  },\n  mapContainer: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginTop: 16\n  },\n  map: {\n    width: '100%',\n    height: '100%'\n  },\n  mapMarker: {\n    width: 90,\n    height: 80\n  },\n  mapMarkerContainer: {\n    width: 90,\n    height: 70,\n    backgroundColor: '#22A0B6',\n    flexDirection: 'column',\n    borderRadius: 8,\n    overflow: 'hidden',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  mapMarkerImage: {\n    width: 90,\n    height: 45,\n    resizeMode: 'cover'\n  },\n  mapMarkerTitle: {\n    flex: 1,\n    fontFamily: 'Roboto_400Regular',\n    color: '#FFF',\n    fontSize: 13,\n    lineHeight: 23\n  },\n  itemsContainer: {\n    flexDirection: 'row',\n    marginTop: 16,\n    marginBottom: 32\n  },\n  item: {\n    backgroundColor: '#fff',\n    borderWidth: 2,\n    borderColor: '#eee',\n    height: 120,\n    width: 120,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 16,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    textAlign: 'center'\n  },\n  selectedItem: {\n    borderColor: '#E92A77',\n    borderWidth: 2\n  },\n  itemTitle: {\n    fontFamily: 'Roboto_400Regular',\n    textAlign: 'center',\n    fontSize: 13\n  }\n});\nexport default Points;","map":{"version":3,"sources":["D:/Projetos/nlw/mobile/src/pages/Points/index.tsx"],"names":["React","useState","useEffect","Constants","Feather","Icon","useNavigation","useRoute","MapView","Marker","SvgUri","Location","api","Points","items","setItems","selectedItems","setSelectedItems","points","setPoints","initialPosition","setInitialPosition","navigation","route","routeParams","params","loadPosition","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","location","coords","latitude","longitude","get","then","response","data","city","uf","handleNavigateBack","goBack","handleNavegateToDetail","id","navigate","point_id","handleSelectItem","alreadySelected","findIndex","item","filteredItems","filter","styles","container","title","description","mapContainer","map","latitudeDelta","longitudeDelta","point","String","mapMarker","mapMarkerContainer","mapMarkerImage","uri","image_url","mapMarkerTitle","name","itemsContainer","paddingHorizontal","includes","selectedItem","itemTitle","StyleSheet","create","flex","paddingTop","statusBarHeight","fontSize","fontFamily","marginTop","color","width","borderRadius","overflow","height","backgroundColor","flexDirection","alignItems","textAlign","resizeMode","lineHeight","marginBottom","borderWidth","borderColor","paddingBottom","marginRight","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Constants from 'expo-constants';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { View, StyleSheet, TouchableOpacity, Text, ScrollView, Image, Alert } from 'react-native';\nimport MapView, { Marker } from 'react-native-maps';\nimport { SvgUri } from 'react-native-svg';\nimport * as Location from 'expo-location';\nimport api from '../../services/api';\n\ninterface Item {\n  id: number;\n  title: string;\n  image_url: string;\n}\n\ninterface Point {\n  id: number;\n  name: string;\n  image: string;\n  image_url: string;\n  latitude: number;\n  longitude: number;\n}\n\ninterface Params {\n  uf: string;\n  city: string;\n}\n\nconst Points = () => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\n  const [points, setPoints] = useState<Point[]>([]);\n\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\n\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  const routeParams = route.params as Params;\n\n  useEffect(() => {\n    async function loadPosition() {\n      const { status } = await Location.requestPermissionsAsync();\n\n      if (status !== 'granted') {\n        Alert.alert('Ooops...', 'Precisamos de sua permissão para obter a localização.');\n        return;\n      }\n\n      const location = await Location.getCurrentPositionAsync();\n\n      const { latitude, longitude } = location.coords;\n\n      setInitialPosition([\n        latitude,\n        longitude\n      ])\n\n    }\n\n    loadPosition();\n  }, []);\n\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    api.get('points', {\n      params: {\n        city: routeParams.city,\n        uf: routeParams.uf,\n        items: selectedItems\n      }\n    }).then(response => {\n      setPoints(response.data);\n    })\n  }, [selectedItems])\n\n  function handleNavigateBack() {\n    navigation.goBack();\n  }\n\n  function handleNavegateToDetail(id: number) {\n    navigation.navigate('Detail', { point_id: id });\n  }\n\n  function handleSelectItem(id: number) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <TouchableOpacity onPress={handleNavigateBack}>\n          <Icon name=\"arrow-left\" size={20} color=\"#0C4383\" />\n        </TouchableOpacity>\n\n        <Text style={styles.title}>Bem Vindo.</Text>\n        <Text style={styles.description}>Encontre no mapa um ponto de coleta.</Text>\n\n        <View style={styles.mapContainer}>\n          {initialPosition[0] !== 0 && (\n            <MapView style={styles.map}\n              initialRegion={{\n                latitude: initialPosition[0],\n                longitude: initialPosition[1],\n                latitudeDelta: 0.017,\n                longitudeDelta: 0.017\n              }}\n            >\n              {points.map(point => (\n                <Marker key={String(point.id)} onPress={() => handleNavegateToDetail(point.id)} style={styles.mapMarker} coordinate={{\n                  latitude: point.latitude,\n                  longitude: point.longitude,\n                }}\n                >\n                  <View style={styles.mapMarkerContainer}>\n                    <Image style={styles.mapMarkerImage} source={{ uri: point.image_url }} />\n                    <Text style={styles.mapMarkerTitle}>{point.name}</Text>\n                  </View>\n  \n                </Marker>\n              ))}\n\n            </MapView>\n          )}\n        </View>\n      </View>\n      <View style={styles.itemsContainer}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={{ paddingHorizontal: 20 }}>\n          {items.map(item => (\n            <TouchableOpacity activeOpacity={0.6}\n              key={String(item.id)} style={[\n                styles.item,\n                selectedItems.includes(item.id) ? styles.selectedItem : {}\n              ]} onPress={() => handleSelectItem(item.id)}>\n              <SvgUri width={42} height={42} uri={item.image_url} />\n              <Text style={styles.itemTitle}>{item.title}</Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    paddingTop: 20 + Constants.statusBarHeight,\n  },\n\n  title: {\n    fontSize: 20,\n    fontFamily: 'Ubuntu_700Bold',\n    marginTop: 24,\n    color: '#E92A77'\n  },\n\n  description: {\n    color: '#6C6C80',\n    fontSize: 16,\n    marginTop: 4,\n    fontFamily: 'Roboto_400Regular',\n  },\n\n  mapContainer: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginTop: 16,\n  },\n\n  map: {\n    width: '100%',\n    height: '100%',\n  },\n\n  mapMarker: {\n    width: 90,\n    height: 80,\n  },\n\n  mapMarkerContainer: {\n    width: 90,\n    height: 70,\n    backgroundColor: '#22A0B6',\n    flexDirection: 'column',\n    borderRadius: 8,\n    overflow: 'hidden',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n\n  mapMarkerImage: {\n    width: 90,\n    height: 45,\n    resizeMode: 'cover',\n  },\n\n  mapMarkerTitle: {\n    flex: 1,\n    fontFamily: 'Roboto_400Regular',\n    color: '#FFF',\n    fontSize: 13,\n    lineHeight: 23,\n  },\n\n  itemsContainer: {\n    flexDirection: 'row',\n    marginTop: 16,\n    marginBottom: 32,\n  },\n\n  item: {\n    backgroundColor: '#fff',\n    borderWidth: 2,\n    borderColor: '#eee',\n    height: 120,\n    width: 120,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 16,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n\n    textAlign: 'center',\n  },\n\n  selectedItem: {\n    borderColor: '#E92A77',\n    borderWidth: 2,\n  },\n\n  itemTitle: {\n    fontFamily: 'Roboto_400Regular',\n    textAlign: 'center',\n    fontSize: 13,\n  },\n});\n\nexport default Points;"]},"metadata":{},"sourceType":"module"}